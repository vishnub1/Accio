==============================================
// Unit 1 | Intro To Programming
==============================================

public class Main {
    public static void main(String args[]) {
		System.out.println("Hello, World.");
		System.out.println("Hello, Java.");
    }
}

==============================================
//Unit 2 | Data Types & Variables
==============================================
************************
//Celsius to Fahrenheit
************************

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
	    	int fer = (n*9/5)+32;
        System.out.println(fer);
    }
}
----------------------------------------------
********************
//STAR PATTERN PRINT
********************

import java.util.*;
import java.io.*;

public class Main {
    public static void main(String args[]) {
        //your code here
		System.out.println("*");
		System.out.println("***");
		System.out.println("*****");
    }
}
----------------------------------------------

input : 3
output
***
*
*
*

import java.io.*;
import java.util.*;

class Main {
    public static void main(String args[])throws IOException{
        Scanner sc = new Scanner(System.in);  
        int n=sc.nextInt();

		for(int i=1;i<=n;i++){
			System.out.print("* ");
		}
		System.out.println();
		for(int i=1;i<=n;i++){
			System.out.println("*");
		}
	}
}

----------------------------------------------
*****************
// INPUT OUTPUT
*****************

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
    		Scanner scanner = new Scanner(System.in);
	  	int a = scanner.nextInt();
    		int b = scanner.nextInt();
    		int c = scanner.nextInt();
    		
		System.out.println(a);
    		System.out.println(b);
    		System.out.println(c);
	}
}

====================================================================
Unit 3 | CONDITIONALS
====================================================================
Note:

A triangle is acute-angled, if twice the square of the largest side is less than the sum of squares of all the sides.

A triangle is obtuse-angled, if twice the square of its largest side is greater than the sum of squares of all the sides.

A triangle is right-angled, if twice the square of its largest side is exactly equal to the sum of squares of all the sides.


import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
	    Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
		int c = sc.nextInt();
	    	int maxSide = a;
	    
		if(b>maxSide){
	     	 maxSide = b;
	    	}
		if(c>maxSide){
	     	 maxSide = c;
	   	}
	    	if((2*maxSide*maxSide)>a*a+b*b+c*c){
	      	 System.out.println(3);
	    	}
		else if((2*maxSide*maxSide)==a*a+b*b+c*c){
	     	 System.out.println(2);
	    	}
		else{
	     	 System.out.println(1);
	    }
	}
}
--------------------------------------------------------------------------------------------
**************
// LEAP YEAR
**************

import java.util.*;

public class Main {
	public static void main(String[] args) throws Throwable {
		Scanner sc = new Scanner(System.in);
		int year = sc.nextInt();

		if((year%4==0) && (year%100!=0) || year%400==0){   
			System.out.println(1);
		}
		else{
			System.out.println(0);
		}
	}
}

-----------------------------------------------------------------------------
*******************
//PALINDROME NUMBER
*******************
Input
121

Output
true 

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main{
	public static void main (String[] args) throws java.lang.Exception{
	    Scanner sc = new Scanner(System.in);
		int num = sc.nextInt();
		int originalNumber = num;
		int dig;
		int rev = 0;
	
		while(num>0){
			dig = num%10;
			rev = (rev*10)+dig;
			num = num/10;
		}
		if(originalNumber == rev){
			System.out.println("true");
		}
		else{
			System.out.println("false");
		}
	}
}

----------------------------------------------------------------
*************************
//Armstrong Number Finder
*************************

Given a number N, you need to check whether it is Armstrong number or not.
A number is called an Armstrong number if the sum of cubes of each digit of the number is equal to the number itself.


import java.util.*;
import java.lang.*;
import java.io.*;

public class Main
{
	public static void main (String[] args) throws java.lang.Exception
	{
	
	    int rem,arm=0;
	    Scanner sc = new Scanner(System.in);
	    int num = sc.nextInt();
	    int original = num;
	    
		while(num>0){
	      	rem = num%10;
	      	arm = (rem*rem*rem)+arm;
	      	num = num/10;
	    	}
	    	if(original == arm){
	      	System.out.println(1);
	    	}else{
	      	System.out.println(0);
	    	}
	}
}
/*
import java.util.*;

class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Solution.isArmstrongOrNot(N);
    }
}
class Solution {
    static void isArmstrongOrNot(int N) {
        // Your code here
		int originalNumber = N;
		int arm=0,rem;
		while(N>0){
			rem = N%10;
			arm = (rem*rem*rem)+arm;
			N = N/10;	
		}
		if(originalNumber==arm){
			System.out.println(1);
		}
		else{
			System.out.println(0);
		}
    }
}
*/
--------------------------------------------------------------------------
*************************
// Sum of Natural Numbers
*************************

import java.util.*;

public class Main {
  public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      long n = sc.nextLong();
	  
    	// long ans = (n*(n+1L))/2;
    	// System.out.println(ans);
	  
	  long sum = 0;
	  for(int i=0;i<=n;i++){
		  sum = sum+i;
	  }
	  System.out.println(sum);
    }
}

---------------------------------------------------------------------------
************
//Staircase
************

       #
      ##
     ###
    ####

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();

		for(int i=1;i<=n;i++){
			for(int j=1;j<=n-i;j++){
				System.out.print(" ");  //spaces printing
			}
			for(int k=1;k<=i;k++){
				System.out.print("#");  //# printing
			}
			System.out.println();		// for moving cursor to next Line
		}
	}
}


-----------------------------------------------------
************
// Quardants
************

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main{
	public static void main (String[] args) throws java.lang.Exception{
    Scanner sc = new Scanner(System.in);
	    int x = sc.nextInt();
	    int y = sc.nextInt();
    
	    if(x>0 && y>0){
	      System.out.println(1);
	    }
	    else if(x<0 && y>0){
	      System.out.println(2);
	    }
	    else if(x<0 && y<0){
	      System.out.println(3);
	    }else{
	      System.out.println(4);
	    }
	}
}
--------------------------------------------------------------------------------
================================================================================
Unit 5 | Functions & Arrays
================================================================================

**************
// A contest 
**************
input
8 5                       // 8 is number of element and 5 is the position (5th position = 7) 
10 9 8 7 7 7 5 5	  // how many elements is >=7 count that no (10 9 8 7 7 7) so the count is 6  

Output
6


import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n= sc.nextInt(), k=sc.nextInt();  //taking n and k 

		int arr[] = new int[n];  // array creating 

		//storing array
		for(int i=0;i<n;i++){
			arr[i] = sc.nextInt();
		}
		int count =0;    //initial count will be 0
			for(int i=0;i<n;i++){
				if(arr[i]>0 && arr[i]>=arr[k-1]){    //arr[i]>0 check no is positive
					count++;
				}
			}
		System.out.println(count);
    }
}
--------------------------------------------------------------------------------------------------------
**********************
//Divisible Sum Pairs
**********************
input
6 3          
1 3 2 6 1 2

Output
5

Explanation       // finding pairs that are divisible by 3. (%3==0)
Here are the 5 valid pairs when k = 3:
(0,2) = arr[0]+arr[2] = 1 + 2 = 3      
(0,5) = arr[0]+arr[5] = 1+ 2 = 3
(1,3) = arr[1]+arr[3] = 3 + 6 = 9
(2,4) = arr[2]+arr[4] = 2 + 1 = 3
(4,5) = arr[4]+arr[5] = 1 + 2 = 3
-----------------------------------
import java.io.*;
import java.util.*;


public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt(), k=sc.nextInt();
        int arr[]=new int[n];  //array creating
		
		//storing element to array 
        for(int i=0;i<n;++i){
            arr[i]=sc.nextInt();
        }
		int count = 0;
		for(int i=0;i<n;i++){          //for arr[i] 
			for(int j=i+1;j<n;j++){     // for arr[j]   for pair j=i+1 always understand 
				if((arr[i]+arr[j])%k==0 && i<j) {  
					count++;
				}
			}
		}
		System.out.println(count);	
    }
}
---------------------------------------------------------------------------------------------
*****************
// Array Rotation
*****************


