============================================================================================
// Unit 1 | Intro To Programming
============================================================================================
***************
// Hello world
***************

public class Main {
    public static void main(String args[]) {
		System.out.println("Hello, World.");
		System.out.println("Hello, Java.");
    }
}

============================================================================================
//Unit 2 | Data Types & Variables
============================================================================================
************************
//Celsius to Fahrenheit
************************

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
	    	int fer = (n*9/5)+32;
        System.out.println(fer);
    }
}
______________________________________________________________________________________________
********************
//STAR PATTERN PRINT
********************

import java.util.*;
import java.io.*;

public class Main {
    public static void main(String args[]) {
        //your code here
		System.out.println("*");
		System.out.println("***");
		System.out.println("*****");
    }
}
______________________________________________________________________________________________

input : 3
output
***
*
*
*

import java.io.*;
import java.util.*;

class Main {
    public static void main(String args[])throws IOException{
        Scanner sc = new Scanner(System.in);  
        int n=sc.nextInt();

		for(int i=1;i<=n;i++){
			System.out.print("* ");
		}
		System.out.println();
		for(int i=1;i<=n;i++){
			System.out.println("*");
		}
	}
}

______________________________________________________________________________________________
*****************
// INPUT OUTPUT
*****************

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
    		Scanner scanner = new Scanner(System.in);
	  	int a = scanner.nextInt();
    		int b = scanner.nextInt();
    		int c = scanner.nextInt();
    		
		System.out.println(a);
    		System.out.println(b);
    		System.out.println(c);
	}
}

===============================================================================================
Unit 3 | CONDITIONALS
===============================================================================================
Note:

A triangle is acute-angled, if twice the square of the largest side is less than the sum of squares of all the sides.

A triangle is obtuse-angled, if twice the square of its largest side is greater than the sum of squares of all the sides.

A triangle is right-angled, if twice the square of its largest side is exactly equal to the sum of squares of all the sides.


import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
	    Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
		int c = sc.nextInt();
	    	int maxSide = a;
	    
		if(b>maxSide){
	     	 maxSide = b;
	    	}
		if(c>maxSide){
	     	 maxSide = c;
	   	}
	    	if((2*maxSide*maxSide)>a*a+b*b+c*c){
	      	 System.out.println(3);
	    	}
		else if((2*maxSide*maxSide)==a*a+b*b+c*c){
	     	 System.out.println(2);
	    	}
		else{
	     	 System.out.println(1);
	    }
	}
}
______________________________________________________________________________________________

**************
// LEAP YEAR
**************

import java.util.*;

public class Main {
	public static void main(String[] args) throws Throwable {
		Scanner sc = new Scanner(System.in);
		int year = sc.nextInt();

		if((year%4==0) && (year%100!=0) || year%400==0){   
			System.out.println(1);
		}
		else{
			System.out.println(0);
		}
	}
}

______________________________________________________________________________________________

*******************
//PALINDROME NUMBER
*******************
Input
121

Output
true 
---------------------

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main{
	public static void main (String[] args) throws java.lang.Exception{
	    Scanner sc = new Scanner(System.in);
		int num = sc.nextInt();
		int originalNumber = num;
		int dig;
		int rev = 0;
	
		while(num>0){
			dig = num%10;
			rev = (rev*10)+dig;
			num = num/10;
		}
		if(originalNumber == rev){
			System.out.println("true");
		}
		else{
			System.out.println("false");
		}
	}
}

______________________________________________________________________________________________

*************************
//Armstrong Number Finder
*************************

Given a number N, you need to check whether it is Armstrong number or not.
A number is called an Armstrong number if the sum of cubes of each digit of the number is equal to the number itself.


import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
	
	    int rem,arm=0;
	    Scanner sc = new Scanner(System.in);
	    int num = sc.nextInt();
	    int original = num;
	    
		while(num>0){
	      	rem = num%10;
	      	arm = (rem*rem*rem)+arm;
	      	num = num/10;
	    	}
	    	if(original == arm){
	      	System.out.println(1);
	    	}else{
	      	System.out.println(0);
	    	}
	}
}
/*
import java.util.*;

class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        Solution.isArmstrongOrNot(N);
    }
}
class Solution {
    static void isArmstrongOrNot(int N) {
        // Your code here
		int originalNumber = N;
		int arm=0,rem;
		while(N>0){
			rem = N%10;
			arm = (rem*rem*rem)+arm;
			N = N/10;	
		}
		if(originalNumber==arm){
			System.out.println(1);
		}
		else{
			System.out.println(0);
		}
    }
}
*/
______________________________________________________________________________________________

*************************
// Sum of Natural Numbers
*************************

import java.util.*;

public class Main {
  public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      long n = sc.nextLong();
	  
    	// long ans = (n*(n+1L))/2;
    	// System.out.println(ans);
	  
	  long sum = 0;
	  for(int i=0;i<=n;i++){
		  sum = sum+i;
	  }
	  System.out.println(sum);
    }
}

______________________________________________________________________________________________

************
//Staircase
************

       #
      ##
     ###
    ####
--------------

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();

		for(int i=1;i<=n;i++){
			for(int j=1;j<=n-i;j++){
				System.out.print(" ");  //spaces printing
			}
			for(int k=1;k<=i;k++){
				System.out.print("#");  //# printing
			}
			System.out.println();		// for moving cursor to next Line
		}
	}
}

______________________________________________________________________________________________

*************
// Quardants
*************
12 23   ->  I        (+,+)
-12 23  ->  II       (-,+)
-12 -23 ->  III	     (-,-)
12 -23  ->  IV	     (+,-)
---------------------------

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main{
	public static void main (String[] args) throws java.lang.Exception{
    Scanner sc = new Scanner(System.in);
	    int x = sc.nextInt();
	    int y = sc.nextInt();
    
	    if(x>0 && y>0){
	      System.out.println(1);
	    }
	    else if(x<0 && y>0){
	      System.out.println(2);
	    }
	    else if(x<0 && y<0){
	      System.out.println(3);
	    }else{
	      System.out.println(4);
	    }
	}
}
______________________________________________________________________________________________

==============================================================================================
Unit 5 | Functions & Arrays
==============================================================================================

**************
// A contest 
**************
input
8 5                       // 8 is number of element and 5 is the position (5th position = 7) 
10 9 8 7 7 7 5 5	  // how many elements is >=7 count that no (10 9 8 7 7 7) so the count is 6  

Output
6
-------------------

import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n= sc.nextInt(), k=sc.nextInt();  //taking n and k 

		int arr[] = new int[n];  // array creating 

		//storing array
		for(int i=0;i<n;i++){
			arr[i] = sc.nextInt();
		}
		int count =0;    //initial count will be 0
			for(int i=0;i<n;i++){
				if(arr[i]>0 && arr[i]>=arr[k-1]){    //arr[i]>0 check no is positive
					count++;
				}
			}
		System.out.println(count);
    }
}
______________________________________________________________________________________________

**********************
//Divisible Sum Pairs
**********************
input
6 3          
1 3 2 6 1 2

Output
5

Explanation      			 // finding pairs that are divisible by 3. (%3==0)
Here are the 5 valid pairs when k = 3:
(0,2) = arr[0]+arr[2] = 1 + 2 = 3      
(0,5) = arr[0]+arr[5] = 1+ 2 = 3
(1,3) = arr[1]+arr[3] = 3 + 6 = 9
(2,4) = arr[2]+arr[4] = 2 + 1 = 3
(4,5) = arr[4]+arr[5] = 1 + 2 = 3
-----------------------------------

import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt(), k=sc.nextInt();
        int arr[]=new int[n];  //array creating
		
		//storing element to array 
        for(int i=0;i<n;++i){
            arr[i]=sc.nextInt();
        }
		int count = 0;
		for(int i=0;i<n;i++){          //for arr[i] 
			for(int j=i+1;j<n;j++){     // for arr[j]   for pair j=i+1 always understand 
				if((arr[i]+arr[j])%k==0 && i<j) {  
					count++;
				}
			}
		}
		System.out.println(count);	
    }
}
______________________________________________________________________________________________

*****************
// Array Rotation
*****************
Input Format
	The first line contains 3 space-separated integers n, k & q the number of elements in the integer array, the rotation count and the number of queries.
	The second line contains n space-separated integers, describing elements in arr.
	The third line contains q space-separated integers, describing elements in queries

Output Format
	Return the array containing values of the elements at the given indices in array queries.

Input
3 2 2
3 4 5
1 2

Output
5 3
-------------------------

import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		// STEP 1 Taking input From the user 
		int n,k,q; 
		n = sc.nextInt(); // size of the array 
		k = sc.nextInt();  // number of rotations 
		q = sc.nextInt();  // total number of queries 

		// STEP 2 Input the values into the array 
		int arr[] = new int[n];
		int rotatedArray[] = new int[n];
		
		for(int i=0;i<n;i=i+1) {
		    arr[i] = sc.nextInt();
		}
		for(int i=0;i<n;i++){
			int newIndex = (i+k)%n;
			rotatedArray[newIndex] = arr[i];
		}
		for(int i=0;i<q;i++){
			int index = sc.nextInt();
			System.out.print(rotatedArray[index]+" ");
		}
	}
}

______________________________________________________________________________________________

*******
//Pairs
*******
Given an array of N integers, count the total pairs of integers that have a difference of K.
Input Format
	1st line contains N & K (integers).
	2nd line contains N numbers of the array.

Output Format
	One integer - the number of pairs of numbers that have a difference K.
	
Input
4 1  
32 0 63 8

Output
0
--------------------------

import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n,k;
        n = sc.nextInt();
        k = sc.nextInt();
        int arr[] = new int[n];
        for(int i=0;i<n;i++){
                arr[i]=sc.nextInt();
        }
		int count = 0;
		for(int i=0;i<n;i++){
			for(int j=i+1;j<n;j++){
				if((arr[i]-arr[j])==k || (arr[j]-arr[i])==k){
					count++;
				}
			}
		}
		System.out.println(count);
    }
}
______________________________________________________________________________________________

**************
// Plus Minus  
**************
Input
6
-4 3 -9 -5 4 1

Output                //calculating ratio
0.500000
0.500000
0.000000
--------------

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
    		Scanner sc = new Scanner(System.in);
    		int n = sc.nextInt();
    		int arr[] = new int[n];     //creating and storing array
    		for(int i=0;i<n;i++){
      			arr[i] = sc.nextInt();
    		}
		
    		double pos = 0;
    		double neg = 0;
		double zero = 0;
    
    		for(int i=0; i<n; i++){
      			if(arr[i] > 0){
        			pos++;
      			}
      			else if(arr[i] < 0){
        			neg++;
      			}
      			else{
        			zero++;
      			}
    		}
    		System.out.printf("%.6f\n",pos/n);
    		System.out.printf("%.6f\n",neg/n);
    		System.out.printf("%.6f\n",zero/n);
	}
}

______________________________________________________________________________________________
============================================================================================
Unit 6 | Practice questions- Conditionals
============================================================================================
**************
// Water Bill
**************

In this task, you need to identify the water bill for a household

You are given the total liter of water used by a house and output the total water bill. 

The water bill is calculated as follows:
	For first 100 litres: Rs. 15 per litre
	For next 100 litres: Rs. 14 per litre
	After 200 litres: Rs. 12 per litre
--------------------------------------------

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
		Scanner sc = new Scanner(System.in);
	    int liter = sc.nextInt();
	    
		int bill = 0;
    
	    if(liter <= 100){
	      bill = liter*15;
	      System.out.println(bill);
	    }
	    else if(liter>100 && liter<=200){
	      bill = (100*15) + (liter-100)*14;
	      System.out.println(bill);
	    }
	    else{
	      bill = (100*15) + (100*14) + (liter-200)*12;
	      System.out.println(bill);
	    }
	}
}
______________________________________________________________________________________________

******************
// Number of Days
******************

Given the number of the month, 
your task is to calculate the number of days present in the particular month.

Note:- Consider non-leap year.
------------------------------

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
	    Scanner sc = new Scanner(System.in);
	    int m = sc.nextInt();  //m = month

		if(m>0 && m<=12){
			
			if(m==1 || m==3 || m==5 || m==7 || m==8 || m==10 || m==12){
		      System.out.println(31);
		    }
		    else if(m==2){
		      System.out.println(28);
		    }
		    else if(m==4 || m==6 || m==9 || m==11){
		      System.out.println(30);
		    }
		}
		else{
			System.out.println("Please enter the months bet '1-12'");
		}
	}
}

______________________________________________________________________________________________

*************
// Stopwatch
*************

Robin just received a stopwatch from her grandfather. Robin’s stopwatch has a single button. 
Pressing the button alternates between stopping and starting the stopwatch’s timer. When the timer is on, 
the displayed time increases by 1 every second.
Initially, the stopwatch is stopped and the timer reads 0 seconds. Given a sequence of times that the stopwatch button is pressed, 
determine what the stopwatch’s timer displays, if stopped. If it's still running, print "still running".

Input Format
The first line of input contains a single integer N, which is the number of times the stopwatch was pressed.
The next N lines describe the times the stopwatch’s button was pressed in increasing order. Each line contains a single integer t, 
which is the time the button was pressed. No two button presses happen in the same second.

Output Format
Print "still running" if the stopwatch’s timer is still running after all button presses were made. 
Otherwise, display the number of seconds the face of the stopwatch.

Example 1
Input
2
7 11

Output
4

Explanation
The stopwatch’s timer starts at 0 seconds. After 7 seconds, the button is pressed, and the timer starts. After 11 seconds, 
the button is pressed again, and the timer stops. The stopwatch’s timer displays 4 seconds.

Example 2
Input
5
2 5 9 10 17

Output
still running

Explanation
The stopwatch’s timer starts at 0 seconds. After 2 seconds, the button is pressed, and the timer starts. 
After 5 seconds, the button is pressed again, and the timer stops. After 9 seconds, the button is pressed, 
and the timer starts. After 10 seconds, the button is pressed again, and the timer stops. After 17 seconds, 
the button is pressed, and the timer starts. The stopwatch’s timer is still running.
------------------------------------------------------------------------------------

import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
	public static void main (String[] args) throws java.lang.Exception {
	    Scanner sc = new Scanner(System.in);
	    int n = sc.nextInt();
	   
		if(n%2==1){
	      System.out.println("still running");
	    }
	    else{
	      int time = 0;
	      for(int i=0;i<n/2;i++){
			  int start = sc.nextInt();
			  int end = sc.nextInt();	        
			  
			  time += (end-start);
	      }
	      System.out.println(time); 
	    }
	}
}

______________________________________________________________________________________________

============================================================================================
// Unit 7 | Practice questions- Loops
============================================================================================

*************************
// Second Largest Integer
*************************
Input:
5
8 34 54 43

Output:
43
--------------

import java.io.*;
import java.util.*;
public class Main {
    public static void main(String args[]) {
        // your code here
		
		Scanner sc = new Scanner(System.in);
		int arr[] = new int[5];
		for(int i=0;i<5;i++){
			arr[i] = sc.nextInt();
		}

		
		for(int i=0;i<5;i++){
			for(int j=i+1;j<5;j++){
				int max=arr[j];
				if(arr[i]>max){
					max = arr[i];
					arr[i] = arr[j];
					arr[j] = max;
				}
			}
		}
		System.out.print(arr[3]);
    }
}

______________________________________________________________________________________________

**********************
// Factorial with loop
**********************

Find the factorial of a given number 
where 
n! = n * n-1 * n-2 .....* 1.
------------------------------

import java.util.*;
import java.io.*;

public class Main {
    public static void main(String args[]) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
		long ans = 1;
		for(int i=2;i<=n;i++){
			ans *= i;
		}
		System.out.println(ans);
	}
}

______________________________________________________________________________________________

********************
// Sigma of Equation
********************

Given a number N, find the value of the below equation for the given number.

Equation
N
∑  {(X + 1)^2 - (3X + 1) + X}
X = 1

Explanation

{(1+1)² - (3x1+1) + (1)} + {(2+1)² - (3x2+1) +2} = 4 - 4 +1 + 9 -7 +2 = 5

--------------------------------------------------------

import java.util.*;
import static java.lang.Math.ceil;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

		long ans = 0;
		for(long i=0;i<=n;i++){
			ans += (((i+1)*(i+1)) - (3*i+1)+i);	
		}
		System.out.println(ans);
    }
}


______________________________________________________________________________________________

****************************
// Last two digit Fibonacci
****************************

import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();

    int[] fib = new int[n + 1];
    fib[0] = 0;
    fib[1] = 1;

    for (int i = 2; i <= n; i++) {
      fib[i] = (fib[i - 1] + fib[i - 2]) % 100;
    }

    if (fib[n] < 10) {
      System.out.println("0" + fib[n]);
    } else {
      System.out.println(fib[n]);
    }
  }
}
______________________________________________________________________________________________

============================================================================================
Unit 8 | More Practice Questions
============================================================================================




============================================================================================

import java.io.*;
import java.util.*; 
public class Main {
	 public static void main (String[] args) { 
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();   //size of the array
        int[] arr= new int[n];  // creating array with size n
        for(int i=0; i<n; i++){
			arr[i]=sc.nextInt();
		}

		int c = 0;  
	    int index = -1;
	    
		 
		 for(int i=0; i<n; i++) { 
			int count = 0;
	        for(int j=0; j<n; j++) { 
            if(arr[i] == arr[j]){
				count++; 
			}    
        } 
        if(count > c) {  
            c = count;  
            index = i;  
        }  
    } 
    if (c > n/2)  
    System.out.println (arr[index]);  
    else
    System.out.println ("No Majority Element");  
}

   
	}
